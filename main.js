(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){var n=e.url,r=e.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._url=n,this._headers=r}var n,r;return n=t,(r=[{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._url,"/users/me"),{method:"GET",headers:this._headers}).then(this._handleResponse)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._url,"/cards"),{method:"GET",headers:this._headers}).then(this._handleResponse)}},{key:"editUserProfile",value:function(e,t){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._handleResponse)}},{key:"editUserAvatar",value:function(e){return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._handleResponse)}},{key:"addCard",value:function(e,t){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._handleResponse)}},{key:"addLikeCard",value:function(e){return fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._handleResponse)}},{key:"deleteLikeCard",value:function(e){return fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleResponse)}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n,r,o,i,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._data=t,this._name=t.name,this._link=t.link,this._like=t.likes,this._ownerId=t.owner._id,this._userId=o,this._cardSelector=n,this._imagePopup=r,this._deleteCardCallback=i,this._likeCard=a,this._isLiked=!1}var t,r;return t=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"generateCard",value:function(){var e=this;return this._element=this._getTemplate(),this._setEventListeners(),this._image=this._element.querySelector(".card__image"),this._title=this._element.querySelector(".card__title"),this._buttonDelete=this._element.querySelector(".card__delete"),this._likeCounter=this._element.querySelector(".card__like-counter"),this._image.src=this._link,this._image.alt=this._name,this._title.textContent=this._name,this._likeCounter.textContent=this._like.length,this._userId!==this._ownerId&&this._buttonDelete.classList.add("card__delete_invisible"),this._data.likes.find((function(t){t._id===e._userId&&(e._toggleLikeCard(),e._isLiked=!0)})),this._element}},{key:"setLikeCounter",value:function(e){this._likeCounter.textContent=e}},{key:"_likeButtonHandler",value:function(){this._toggleLikeCard(),this._isLiked=!this._isLiked,this._likeCard(this._isLiked,this._data,this)}},{key:"_deleteCardElement",value:function(e){this._deleteCardCallback(e,this._data)}},{key:"_toggleLikeCard",value:function(){this._element.querySelector(".card__like").classList.toggle("card__like_active")}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".card__image").addEventListener("click",(function(){e._imagePopup({name:e._name,link:e._link})})),this._element.querySelector(".card__like").addEventListener("click",(function(){e._likeButtonHandler()})),this._element.querySelector(".card__delete").addEventListener("click",(function(t){e._deleteCardElement(t)}))}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=n,this._formButton=t.formButton,this._missmatchErrorMessage=t.missmatchErrorMessage,this._buttonDisable=t.buttonDisable,this._buttonEnable=t.buttonEnable}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){var e=this;this._formElement.addEventListener("submit",this._handleFormSubmit),this._formElement.addEventListener("input",(function(t){return e._handleFormInput(t)}))}},{key:"_handleFormSubmit",value:function(e){e.preventDefault()}},{key:"_handleFormInput",value:function(e){this._input=e.target,this._setCustomError(),this._setFieldError(),this.setSubmitButtonState()}},{key:"setSubmitButtonState",value:function(){var e=this._formElement.querySelector(this._formButton);this._formElement.checkValidity()?(e.classList.remove(this._buttonDisable),e.classList.add(this._buttonEnable),e.removeAttribute("disabled")):(e.classList.remove(this._buttonEnable),e.classList.add(this._buttonDisable),e.setAttribute("disabled","disabled"))}},{key:"_setCustomError",value:function(){var e=this._input.validity;if(this._input.setCustomValidity(""),e.tooShort||e.tooLong){var t=this._input.value.length,n=this._input.getAttribute("minlength");this._input.setCustomValidity("Минимальное количество символов: ".concat(n,". Длина текста сейчас: ").concat(t," символ."))}e.typeMismatch&&this._input.setCustomValidity(this._missmatchErrorMessage)}},{key:"_setFieldError",value:function(){document.querySelector("#".concat(this._input.id,"-error")).textContent=this._input.validationMessage}}])&&o(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._container=document.querySelector(n),this._renderer=o,this._items=r}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&a(t.prototype,n),e}();function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupContainer=document.querySelector(t),this._buttonClosePopup=this._popupContainer.querySelector(".popup__toggle"),this.close=this.close.bind(this),this._handleOverleyClick=this._handleOverleyClick.bind(this),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"setEventListeners",value:function(){this._buttonClosePopup.addEventListener("click",this.close),document.addEventListener("click",this._handleOverleyClick)}},{key:"removeEventListeners",value:function(){this._buttonClosePopup.removeEventListener("click",this.close),document.removeEventListener("click",this._handleOverleyClick)}},{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popupContainer.classList.add("popup_opened")}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popupContainer.classList.remove("popup_opened")}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handleOverleyClick",value:function(e){e.target.classList.contains("popup")&&this.close()}}])&&s(t.prototype,n),e}();function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function h(e,t,n){return(h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function p(e,t){return(p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function d(e,t){return!t||"object"!==l(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function _(e){return(_=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&p(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(r);if(o){var n=_(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return d(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._itemImagePopupShowImage=document.querySelector(".image__item"),t._titleImagePopupShowImage=document.querySelector(".image__caption"),t}return t=a,(n=[{key:"open",value:function(e){var t=e.link,n=e.name;this._itemImagePopupShowImage.src=t,this._itemImagePopupShowImage.alt=n,this._titleImagePopupShowImage.textContent=n,h(_(a.prototype),"open",this).call(this)}}])&&f(t.prototype,n),a}(c);function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(e,t,n){return(b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function k(e,t){return(k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function g(e,t){return!t||"object"!==m(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function S(e){return(S=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return g(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submitForm=t,n._formData=n._popupContainer.querySelector(".form__data"),n._cardList=n._formData.querySelectorAll(".form__input"),n._submitButton=n._popupContainer.querySelector(".form__button"),n}return t=a,(n=[{key:"setSubmitButtonText",value:function(e){this._submitButton.textContent=e}},{key:"close",value:function(){b(S(a.prototype),"close",this).call(this),this._formData.reset()}},{key:"_getInputValues",value:function(){var e={};return this._cardList.forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;b(S(a.prototype),"setEventListeners",this).call(this),this._formData.addEventListener("submit",(function(t){t.preventDefault(),e._submitForm(e._getInputValues())}))}}])&&v(t.prototype,n),a}(c);function E(e){return(E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function O(e,t,n){return(O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=j(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function L(e,t){return(L=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function P(e,t){return!t||"object"!==E(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function j(e){return(j=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var I=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&L(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=j(r);if(o){var n=j(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return P(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submitCallback=t,n._formData=n._popupContainer.querySelector(".form__data"),n}return t=a,(n=[{key:"close",value:function(){O(j(a.prototype),"close",this).call(this)}},{key:"setSubmitCallback",value:function(e){this._submitCallback=e}},{key:"setEventListeners",value:function(){var e=this;O(j(a.prototype),"setEventListeners",this).call(this),this._formData.addEventListener("submit",(function(t){t.preventDefault(),e._submitCallback()}))}}])&&w(t.prototype,n),a}(c);function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var R=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputName=document.querySelector(t),this._inputJob=document.querySelector(n),this._selectorAvatar=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{userName:this._inputName.textContent,userJob:this._inputJob.textContent}}},{key:"setUserInfo",value:function(e,t){this._inputName.textContent=e,this._inputJob.textContent=t}},{key:"setUserAvatar",value:function(e){this._selectorAvatar.src=e}},{key:"setUserId",value:function(e){this._userId=e}},{key:"getUserId",value:function(){return this._userId}}])&&q(t.prototype,n),e}(),T=document.querySelector(".popup_edit-profile").querySelector(".form__data"),B=document.querySelector(".popup_new-place").querySelector(".form__data"),D=document.querySelector(".popup_update-avatar").querySelector(".form__data"),x=document.querySelector(".profile"),U=x.querySelector(".profile__button-edit"),A=x.querySelector(".profile__button-add"),V=x.querySelector(".profile__overlay"),N=document.querySelector(".form__input_js_name"),F=document.querySelector(".form__input_js_job"),J=".cards__list",M={formButton:".form__button",missmatchErrorMessage:"Введите адрес сайта.",buttonDisable:"form__button_disable",buttonEnable:"form__button_enable"};function H(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}new i(M,T).enableValidation();var G=new i(M,B);G.enableValidation();var z=new i(M,D);z.enableValidation();var $=function(e,t){t?e.setSubmitButtonText("Сохранить"):e.setSubmitButtonText("Сохранение...")},K=function(e){return new r(e,".card-template",Z.open.bind(Z),Y.getUserId(),Q,W).generateCard()},Q=function(e,t){re.setSubmitCallback((function(){X.deleteCard(t._id).then((function(){re.close(),e.target.closest(".card").remove()})).catch((function(e){console.log(e)}))})),re.open()},W=function(e,t,n){e?X.addLikeCard(t._id).then((function(e){n.setLikeCounter(e.likes.length)})).catch((function(e){console.log(e)})):X.deleteLikeCard(t._id).then((function(e){n.setLikeCounter(e.likes.length)})).catch((function(e){console.log(e)}))},X=new t({url:"https://mesto.nomoreparties.co/v1/cohort-26",headers:{authorization:"bd92b376-a12a-4ae7-a181-e2ffac2d35f6","Content-Type":"application/json"}});Promise.all([X.getUserInfo(),X.getInitialCards()]).then((function(e){var t,n,r,o,i,a,s=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return H(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?H(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),c=s[0],l=s[1],f=new u({items:l,renderer:function(e){var t=K(e);f.addItem(t)}},J);f.renderItems(l.reverse()),r=c.name,o=c.about,i=c.avatar,a=c._id,Y.setUserInfo(r,o),Y.setUserId(a),i&&Y.setUserAvatar(i)})).catch((function(e){console.log(e)}));var Y=new R(".profile__name",".profile__job",".profile__image"),Z=new y(".popup_show-image"),ee=new C(".popup_edit-profile",(function(e){var t=e.user,n=e.job;$(ee,!1),X.editUserProfile(t,n).then((function(e){Y.setUserInfo(e.name,e.about),ee.close()})).catch((function(e){console.log(e)})).finally((function(){$(ee,!0)}))})),te=new C(".popup_new-place",(function(e){var t=e.place,n=e.link;$(te,!1),X.addCard(t,n).then((function(e){!function(e){var t=K(e);new u({},J).addItem(t)}(e),te.close()})).catch((function(e){console.log(e)})).finally((function(){$(te,!0)}))})),ne=new C(".popup_update-avatar",(function(e){var t=e.avatar;$(ne,!1),X.editUserAvatar(t).then((function(e){Y.setUserAvatar(e.avatar),ne.close()})).catch((function(e){console.log(e)})).finally((function(){$(te,!0)}))})),re=new I(".popup_delete-card",Q);U.addEventListener("click",(function(){var e=Y.getUserInfo();N.value=e.userName,F.value=e.userJob,ee.open()})),A.addEventListener("click",(function(){G.setSubmitButtonState(),te.open()})),V.addEventListener("click",(function(){z.setSubmitButtonState(),ne.open()})),Z.setEventListeners(),ee.setEventListeners(),te.setEventListeners(),ne.setEventListeners(),re.setEventListeners()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,